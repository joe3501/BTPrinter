###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V5.30.0.51174/W32 for ARM     12/Dec/2015  15:20:05 #
# Copyright 1999-2009 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  E:\BT Printer\FW\src\usb_lib\usb_endp.c                  #
#    Command line =  "E:\BT Printer\FW\src\usb_lib\usb_endp.c" -D DEBUG_VER   #
#                    -lcN "E:\BT Printer\FW\src\Project\EWARMv5\Debug\List\"  #
#                    -o "E:\BT Printer\FW\src\Project\EWARMv5\Debug\Obj\"     #
#                    --no_cse --no_unroll --no_inline --no_code_motion        #
#                    --no_tbaa --no_clustering --no_scheduling --debug        #
#                    --endian=little --cpu=Cortex-M3 -e --fpu=None            #
#                    --dlib_config "C:\Program Files\IAR Systems\Embedded     #
#                    Workbench 5.4\arm\INC\DLib_Config_Normal.h" -I "E:\BT    #
#                    Printer\FW\src\Project\EWARMv5\..\" -I "E:\BT            #
#                    Printer\FW\src\Project\EWARMv5\..\..\App\" -I "E:\BT     #
#                    Printer\FW\src\Project\EWARMv5\..\..\Drivers\" -I        #
#                    "E:\BT Printer\FW\src\Project\EWARMv5\..\..\FatFs\" -I   #
#                    "E:\BT Printer\FW\src\Project\EWARMv5\..\..\Lib\inc\"    #
#                    -I "E:\BT Printer\FW\src\Project\EWARMv5\..\..\uCOS\uC-C #
#                    PU\" -I "E:\BT Printer\FW\src\Project\EWARMv5\..\..\uCOS #
#                    \uC-LIB\" -I "E:\BT Printer\FW\src\Project\EWARMv5\..\.. #
#                    \uCOS\uCOS-II\Ports\" -I "E:\BT                          #
#                    Printer\FW\src\Project\EWARMv5\..\..\uCOS\uCOS-II\Source #
#                    \" -I "E:\BT Printer\FW\src\Project\EWARMv5\..\..\uCOS\u #
#                    C-Probe\" -I "E:\BT Printer\FW\src\Project\EWARMv5\..\.. #
#                    \usb_lib\" -I "C:\Program Files\IAR Systems\Embedded     #
#                    Workbench 5.4\arm\INC\" -Ol                              #
#    List file    =  E:\BT Printer\FW\src\Project\EWARMv5\Debug\List\usb_endp #
#                    .lst                                                     #
#    Object file  =  E:\BT Printer\FW\src\Project\EWARMv5\Debug\Obj\usb_endp. #
#                    o                                                        #
#                                                                             #
#                                                                             #
###############################################################################

E:\BT Printer\FW\src\usb_lib\usb_endp.c
      1          /******************** (C) COPYRIGHT 2008 STMicroelectronics ********************
      2          * File Name          : usb_endp.c
      3          * Author             : MCD Application Team
      4          * Version            : V2.2.1
      5          * Date               : 09/22/2008
      6          * Description        : Endpoint routines
      7          ********************************************************************************
      8          * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
      9          * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE TIME.
     10          * AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY DIRECT,
     11          * INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING FROM THE
     12          * CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE CODING
     13          * INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
     14          *******************************************************************************/
     15          
     16          /* Includes ------------------------------------------------------------------*/
     17          #include "usb_lib.h"
     18          #include "usb_desc.h"
     19          #include "usb_mem.h"
     20          #include "hw_config.h"
     21          #include "usb_istr.h"
     22          #include "usb_bot.h"
     23          #include "usb_app_config.h"
     24          
     25          #ifdef DEBUG_VER
     26          extern unsigned char debug_buffer[];
     27          extern unsigned int debug_cnt;
     28          #endif
     29          /* Private typedef -----------------------------------------------------------*/
     30          /* Private define ------------------------------------------------------------*/
     31          /* Private macro -------------------------------------------------------------*/
     32          /* Private variables ---------------------------------------------------------*/
     33          #if(USB_DEVICE_CONFIG &_USE_USB_VIRTUAL_COMM_DEVICE)
     34          u8 buffer_out[VIRTUAL_COM_PORT_DATA_SIZE];
     35          u32 count_out = 0;
     36          u32 count_in = 0;
     37          #endif
     38          
     39          #if(USB_DEVICE_CONFIG &_USE_USB_PRINTER_DEVICE)
     40          u8	buffer_out[PRINTER_USB_PORT_BUF_SIZE];
     41          u32 print_data_len;
     42          #endif
     43          
     44          /* Private function prototypes -----------------------------------------------*/
     45          /* Private functions ---------------------------------------------------------*/
     46          /*******************************************************************************
     47          * Function Name  : EP3_IN_Callback
     48          * Description    :
     49          * Input          : None.
     50          * Output         : None.
     51          * Return         : None.
     52          *******************************************************************************/
     53          void EP3_OUT_Callback(void)
     54          {
     55          #if(USB_DEVICE_CONFIG &_USE_USB_VIRTUAL_COMM_DEVICE)
     56             //int i;
     57            if (g_usb_type == USB_VIRTUAL_PORT)
     58            {
     59          	  count_out = GetEPRxCount(ENDP3);
     60          	  PMAToUserBufferCopy(buffer_out, ENDP3_RXADDR, count_out);
     61          	  SetEPRxValid(ENDP3);
     62          
     63          	  /*for (i = 0; i < count_out; i++)
     64          	  {
     65          	  PCUsart_InByte(buffer_out[i]);
     66          	  }*/
     67          	  //@todo....
     68          
     69          	  //此处应用可以处理虚拟串口接收到的数据，由具体应用来修改。。。。
     70            }
     71          #endif
     72          }
     73          
     74          /*******************************************************************************
     75          * Function Name  : EP2_OUT_Callback.
     76          * Description    : EP2 OUT Callback Routine.
     77          * Input          : None.
     78          * Output         : None.
     79          * Return         : None.
     80          *******************************************************************************/
     81          void EP2_OUT_Callback(void)
     82          {
     83          #if(USB_DEVICE_CONFIG &_USE_USB_MASS_STOARGE_DEVICE)
     84          	if (g_usb_type == USB_MASSSTORAGE)
     85          	{
     86          		Mass_Storage_Out();
     87          	}
     88          	else
     89          #endif
     90          #if(USB_DEVICE_CONFIG &_USE_USB_PRINTER_DEVICE)
     91          		if (g_usb_type == USB_PRINTER)
     92          		{
     93          			//@todo.....//解析打印语言
     94          			print_data_len = USB_SIL_Read(EP2_OUT, buffer_out);
     95          			ringbuffer_put(&spp_ringbuf[USB_PRINT_CHANNEL_OFFSET],buffer_out,print_data_len);
     96          			//SetEPTxStatus(ENDP1, EP_TX_STALL);
     97          			//SetEPRxStatus(ENDP2, EP_RX_STALL);
     98          			if (ringbuffer_data_len(&spp_ringbuf[USB_PRINT_CHANNEL_OFFSET]) < RING_BUFF_FULL_TH)
     99          			{
    100          				SetEPRxStatus(EP2_OUT, EP_RX_VALID);
    101          			}
    102          			//SetEPTxCount(ENDP1, BULK_MAX_PACKET_SIZE);
    103          			//SetEPTxStatus(ENDP1, EP_TX_VALID);
    104          
    105          		}
    106          		else
    107          #endif
    108          			;
    109          }
    110          
    111          /*******************************************************************************
    112          * Function Name  : EP1_IN_Callback
    113          * Description    :
    114          * Input          : None.
    115          * Output         : None.
    116          * Return         : None.
    117          *******************************************************************************/
    118          void EP1_IN_Callback(void)
    119          {
    120          #if(USB_DEVICE_CONFIG &_USE_USB_MASS_STOARGE_DEVICE)
    121          	if (g_usb_type == USB_MASSSTORAGE)
    122          	{
    123          		Mass_Storage_In();
    124          	}
    125          	else
    126          #endif
    127          #if(USB_DEVICE_CONFIG &_USE_USB_PRINTER_DEVICE)
    128          		if (g_usb_type == USB_PRINTER)
    129          		{
    130          			//Mass_Storage_In();
    131          			//@todo.....//根据打印语言的解析，返回结果或者状态
    132          			//if (GetEPRxStatus(EP2_OUT) == EP_RX_STALL)
    133          			{
    134          				SetEPRxStatus(EP2_OUT, EP_RX_VALID);/* enable the Endpoint to recive the next cmd*/
    135          			}
    136          			
    137          		}
    138          		else
    139          #endif
    140          
    141          #if(USB_DEVICE_CONFIG &_USE_USB_VIRTUAL_COMM_DEVICE)
    142          	{
    143          		count_in = 0;
    144          	}
    145          #endif
    146          		;
    147          }
    148          
    149          /******************* (C) COPYRIGHT 2008 STMicroelectronics *****END OF FILE****/
    150          

   Maximum stack usage in bytes:

     Function            .cstack
     --------            -------
     EP1_IN_Callback          8
     EP2_OUT_Callback         8
     EP3_OUT_Callback         0
     ringbuffer_data_len      8
     ringbuffer_status        0


   Section sizes:

     Function/Label      Bytes
     --------------      -----
     ringbuffer_status     40
     ringbuffer_data_len   68
     buffer_out            64
     print_data_len         4
     EP3_OUT_Callback       2
     EP2_OUT_Callback      84
     EP1_IN_Callback       36
     ??DataTable3           4

 
  68 bytes in section .bss
 234 bytes in section .text
 
 234 bytes of CODE memory
  68 bytes of DATA memory

Errors: none
Warnings: 2
