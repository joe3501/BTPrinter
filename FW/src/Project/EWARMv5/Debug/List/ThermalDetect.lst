###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V5.30.0.51174/W32 for ARM     10/Dec/2015  18:37:21 #
# Copyright 1999-2009 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  E:\BT Printer\FW\src\App\ThermalDetect.c                 #
#    Command line =  "E:\BT Printer\FW\src\App\ThermalDetect.c" -D DEBUG_VER  #
#                    -lcN "E:\BT Printer\FW\src\Project\EWARMv5\Debug\List\"  #
#                    -o "E:\BT Printer\FW\src\Project\EWARMv5\Debug\Obj\"     #
#                    --no_cse --no_unroll --no_inline --no_code_motion        #
#                    --no_tbaa --no_clustering --no_scheduling --debug        #
#                    --endian=little --cpu=Cortex-M3 -e --fpu=None -I "E:\BT  #
#                    Printer\FW\src\Project\EWARMv5\..\" -I "E:\BT            #
#                    Printer\FW\src\Project\EWARMv5\..\..\App\" -I "E:\BT     #
#                    Printer\FW\src\Project\EWARMv5\..\..\Drivers\" -I        #
#                    "E:\BT Printer\FW\src\Project\EWARMv5\..\..\FatFs\" -I   #
#                    "E:\BT Printer\FW\src\Project\EWARMv5\..\..\Lib\inc\"    #
#                    -I "E:\BT Printer\FW\src\Project\EWARMv5\..\..\uCOS\uC-C #
#                    PU\" -I "E:\BT Printer\FW\src\Project\EWARMv5\..\..\uCOS #
#                    \uC-LIB\" -I "E:\BT Printer\FW\src\Project\EWARMv5\..\.. #
#                    \uCOS\uCOS-II\Ports\" -I "E:\BT                          #
#                    Printer\FW\src\Project\EWARMv5\..\..\uCOS\uCOS-II\Source #
#                    \" -I "E:\BT Printer\FW\src\Project\EWARMv5\..\..\uCOS\u #
#                    C-Probe\" -I "E:\BT Printer\FW\src\Project\EWARMv5\..\.. #
#                    \usb_lib\" -I "C:\Program Files\IAR Systems\Embedded     #
#                    Workbench 5.4\arm\INC\" -Ol                              #
#    List file    =  E:\BT Printer\FW\src\Project\EWARMv5\Debug\List\ThermalD #
#                    etect.lst                                                #
#    Object file  =  E:\BT Printer\FW\src\Project\EWARMv5\Debug\Obj\ThermalDe #
#                    tect.o                                                   #
#                                                                             #
#                                                                             #
###############################################################################

E:\BT Printer\FW\src\App\ThermalDetect.c
      1          #include "Type.h"
      2          #include "ThermalDetect.h"
      3          #include "PaperDetect.h"
      4          
      5          #ifdef DEBUG_VER
      6          extern unsigned char debug_buffer[];
      7          extern unsigned int debug_cnt;
      8          #endif
      9          
     10          #define TEMP_SNS_VALUE		((AD_Value[0][TEMP_SNS_OFFSET]+AD_Value[1][TEMP_SNS_OFFSET]+AD_Value[2][TEMP_SNS_OFFSET]+AD_Value[3][TEMP_SNS_OFFSET]\
     11          	+AD_Value[4][TEMP_SNS_OFFSET]+AD_Value[5][TEMP_SNS_OFFSET]+AD_Value[6][TEMP_SNS_OFFSET]+AD_Value[7][TEMP_SNS_OFFSET]\
     12          	+AD_Value[8][TEMP_SNS_OFFSET]+AD_Value[9][TEMP_SNS_OFFSET])/10)
     13          
     14          /*
     15          函数    把读取到的AD值，根据上拉或下拉电阻计算对应内部的电阻值
     16          输入    ad:     读取到的ad值,单位:100欧姆
     17                  uRes:   外部上拉电阻值
     18                  dRes:   外部下拉电阻值
     19          */
     20          uint32_t TranVtoR(uint32_t ad,uint32_t adMax,uint32_t uRes,uint32_t dRes)
     21          {
     22              if (uRes)
     23              {   // 上拉电阻
     24                  if (ad >= adMax)
     25                      return (ad*uRes);
     26                  else
     27                      return ((ad*uRes)/(adMax-ad));
     28              }
     29              else
     30              {   // 下拉电阻
     31                  if (ad == 0) ad = 1;
     32                  return ((adMax-ad)*dRes/ad);
     33              }
     34          }
     35          
     36          /*
     37          函数    把热敏机芯的热敏电阻值转换为对应温度
     38          输入    res     热敏电阻值，单位:100欧姆
     39          */
     40          const uint16_t restbl[25] = {8430,6230,4660,3520,2690,2080,
     41                                  1610,1240, 968, 757, 595, 471,
     42                                   375, 300, 242, 196, 159, 131,
     43                                   108,  89,  74,  62,  52,  44,37};
     44          int16_t TranRtoDegree(uint32_t res)
     45          {
     46              uint16_t i;
     47              int16_t degree;
     48          
     49              // 热敏电阻对应温度表 -40 --> 75,间隔5度
     50              i = 0;
     51              while(i < 24)
     52              {
     53                  if (res >= restbl[i+1]) break;
     54                  i++;
     55              }
     56              if (i >= 24)
     57              {   // 超过80度
     58                  degree = ((restbl[24]-res)*5)/(restbl[23]-restbl[24]) + 80;
     59              }
     60              else
     61              {
     62                  degree = 5*(i+1) - ((res-restbl[i+1])*5)/(restbl[i]-restbl[i+1]) - 40;
     63              }
     64          
     65          #ifdef DEBUG_VER
     66          	//debug_buffer[debug_cnt] = degree;
     67          	//debug_cnt++;
     68          #endif
     69          
     70              return (degree);
     71          }
     72          
     73          int16_t  TPHTemperature(void)
     74          {
     75              return TranRtoDegree(TranVtoR(TEMP_SNS_VALUE,0xfff,300,0));
     76          }
     77          

   Maximum stack usage in bytes:

     Function       .cstack
     --------       -------
     TPHTemperature      8
     TranRtoDegree       8
     TranVtoR            0


   Section sizes:

     Function/Label Bytes
     -------------- -----
     TranVtoR         42
     restbl           52
     TranRtoDegree   132
     TPHTemperature   92

 
  52 bytes in section .rodata
 266 bytes in section .text
 
 266 bytes of CODE  memory
  52 bytes of CONST memory

Errors: none
Warnings: none
