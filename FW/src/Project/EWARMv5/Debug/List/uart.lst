###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V5.30.0.51174/W32 for ARM     21/Nov/2015  16:22:14 #
# Copyright 1999-2009 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  E:\BT Printer\FW\src\App\uart.c                          #
#    Command line =  "E:\BT Printer\FW\src\App\uart.c" -D DEBUG_VER -lcN      #
#                    "E:\BT Printer\FW\src\Project\EWARMv5\Debug\List\" -o    #
#                    "E:\BT Printer\FW\src\Project\EWARMv5\Debug\Obj\"        #
#                    --no_cse --no_unroll --no_inline --no_code_motion        #
#                    --no_tbaa --no_clustering --no_scheduling --debug        #
#                    --endian=little --cpu=Cortex-M3 -e --fpu=None            #
#                    --dlib_config "C:\Program Files\IAR Systems\Embedded     #
#                    Workbench 5.4\arm\INC\DLib_Config_Full.h" -I "E:\BT      #
#                    Printer\FW\src\Project\EWARMv5\..\" -I "E:\BT            #
#                    Printer\FW\src\Project\EWARMv5\..\..\App\" -I "E:\BT     #
#                    Printer\FW\src\Project\EWARMv5\..\..\Drivers\" -I        #
#                    "E:\BT Printer\FW\src\Project\EWARMv5\..\..\FatFs\" -I   #
#                    "E:\BT Printer\FW\src\Project\EWARMv5\..\..\Lib\inc\"    #
#                    -I "E:\BT Printer\FW\src\Project\EWARMv5\..\..\uCOS\uC-C #
#                    PU\" -I "E:\BT Printer\FW\src\Project\EWARMv5\..\..\uCOS #
#                    \uC-LIB\" -I "E:\BT Printer\FW\src\Project\EWARMv5\..\.. #
#                    \uCOS\uCOS-II\Ports\" -I "E:\BT                          #
#                    Printer\FW\src\Project\EWARMv5\..\..\uCOS\uCOS-II\Source #
#                    \" -I "E:\BT Printer\FW\src\Project\EWARMv5\..\..\uCOS\u #
#                    C-Probe\" -I "E:\BT Printer\FW\src\Project\EWARMv5\..\.. #
#                    \usb_lib\" -I "C:\Program Files\IAR Systems\Embedded     #
#                    Workbench 5.4\arm\INC\" -Ol                              #
#    List file    =  E:\BT Printer\FW\src\Project\EWARMv5\Debug\List\uart.lst #
#    Object file  =  E:\BT Printer\FW\src\Project\EWARMv5\Debug\Obj\uart.o    #
#                                                                             #
#                                                                             #
###############################################################################

E:\BT Printer\FW\src\App\uart.c
      1          /****************************************************************************
      2           *   $Id:: uart.c 3648 2010-06-02 21:41:06Z usb00423                        $
      3           *   Project: NXP LPC11xx UART example
      4           *
      5           *   Description:
      6           *     This file contains UART code example which include UART
      7           *     initialization, UART interrupt handler, and related APIs for
      8           *     UART access.
      9           *
     10           ****************************************************************************
     11           * Software that is described herein is for illustrative purposes only
     12           * which provides customers with programming information regarding the
     13           * products. This software is supplied "AS IS" without any warranties.
     14           * NXP Semiconductors assumes no responsibility or liability for the
     15           * use of the software, conveys no license or title under any patent,
     16           * copyright, or mask work right to the product. NXP Semiconductors
     17           * reserves the right to make changes in the software without
     18           * notification. NXP Semiconductors also make no representation or
     19           * warranty that such application will be suitable for the specified
     20           * use without further testing or modification.
     21          ****************************************************************************/
     22          #include "ringbuffer.h"
     23          #include "BT816.h"
     24          #include "Event.h"
     25          /******************************************************************************
     26          **Function name:  Getchar
     27          **
     28          **Description:  Get a char from the uart 0 port
     29          **
     30          **parameters: none
     31          **Returned value:
     32          **
     33          ******************************************************************************/
     34          extern uint8_t Getchar(void)        //接收数据
     35              {
     36                  uint8_t c;
     37                  while(1)
     38                  {
     39                      event_proc();
     40          
     41          			if (ringbuffer_getchar(&spp_ringbuf,&c))
     42          			{
     43          				printf("c=%c\r\n",c);
     44          				return c;
     45          			}
     46                  }
     47          
     48              }
     49          
     50           extern uint8_t PrintBufGetchar(uint8_t *ch)
     51           {
     52          	return ringbuffer_getchar(&spp_ringbuf,ch);
     53           }
     54          
     55           extern void PrintBufPushBytes(uint8_t c)
     56           {
     57                ringbuffer_putchar(&spp_ringbuf,c);
     58           }
     59          
     60          //======================================================================================================
     61          extern void PrintBufPushLine( uint8_t *p, uint32_t len)
     62          {
     63          	ringbuffer_put(&spp_ringbuf,p,len);
     64          }
     65          extern void PrintBufToZero(void)
     66          {
     67               ringbuffer_reset(&spp_ringbuf);
     68          }
     69          /******************************************************************************
     70          **                            End Of File
     71          ******************************************************************************/

   Maximum stack usage in bytes:

     Function          .cstack
     --------          -------
     Getchar                8
     PrintBufGetchar        8
     PrintBufPushBytes      8
     PrintBufPushLine       8
     PrintBufToZero         8


   Section sizes:

     Function/Label         Bytes
     --------------         -----
     Getchar                  40
     PrintBufGetchar          14
     PrintBufPushBytes        14
     PrintBufPushLine         14
     PrintBufToZero           10
     ??DataTable4              4
     ?<Constant "c=%c\r\n">    8

 
  8 bytes in section .rodata
 96 bytes in section .text
 
 96 bytes of CODE  memory
  8 bytes of CONST memory

Errors: none
Warnings: 1
