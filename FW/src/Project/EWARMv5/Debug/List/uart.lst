###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V5.30.0.51174/W32 for ARM     05/Dec/2015  10:31:17 #
# Copyright 1999-2009 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  E:\BT Printer\FW\src\App\uart.c                          #
#    Command line =  "E:\BT Printer\FW\src\App\uart.c" -D DEBUG_VER -lcN      #
#                    "E:\BT Printer\FW\src\Project\EWARMv5\Debug\List\" -o    #
#                    "E:\BT Printer\FW\src\Project\EWARMv5\Debug\Obj\"        #
#                    --no_cse --no_unroll --no_inline --no_code_motion        #
#                    --no_tbaa --no_clustering --no_scheduling --debug        #
#                    --endian=little --cpu=Cortex-M3 -e --fpu=None            #
#                    --dlib_config "C:\Program Files\IAR Systems\Embedded     #
#                    Workbench 5.4\arm\INC\DLib_Config_Full.h" -I "E:\BT      #
#                    Printer\FW\src\Project\EWARMv5\..\" -I "E:\BT            #
#                    Printer\FW\src\Project\EWARMv5\..\..\App\" -I "E:\BT     #
#                    Printer\FW\src\Project\EWARMv5\..\..\Drivers\" -I        #
#                    "E:\BT Printer\FW\src\Project\EWARMv5\..\..\FatFs\" -I   #
#                    "E:\BT Printer\FW\src\Project\EWARMv5\..\..\Lib\inc\"    #
#                    -I "E:\BT Printer\FW\src\Project\EWARMv5\..\..\uCOS\uC-C #
#                    PU\" -I "E:\BT Printer\FW\src\Project\EWARMv5\..\..\uCOS #
#                    \uC-LIB\" -I "E:\BT Printer\FW\src\Project\EWARMv5\..\.. #
#                    \uCOS\uCOS-II\Ports\" -I "E:\BT                          #
#                    Printer\FW\src\Project\EWARMv5\..\..\uCOS\uCOS-II\Source #
#                    \" -I "E:\BT Printer\FW\src\Project\EWARMv5\..\..\uCOS\u #
#                    C-Probe\" -I "E:\BT Printer\FW\src\Project\EWARMv5\..\.. #
#                    \usb_lib\" -I "C:\Program Files\IAR Systems\Embedded     #
#                    Workbench 5.4\arm\INC\" -Ol                              #
#    List file    =  E:\BT Printer\FW\src\Project\EWARMv5\Debug\List\uart.lst #
#    Object file  =  E:\BT Printer\FW\src\Project\EWARMv5\Debug\Obj\uart.o    #
#                                                                             #
#                                                                             #
###############################################################################

E:\BT Printer\FW\src\App\uart.c
      1          /****************************************************************************
      2           *   $Id:: uart.c 3648 2010-06-02 21:41:06Z usb00423                        $
      3           *   Project: NXP LPC11xx UART example
      4           *
      5           *   Description:
      6           *     This file contains UART code example which include UART
      7           *     initialization, UART interrupt handler, and related APIs for
      8           *     UART access.
      9           *
     10           ****************************************************************************
     11           * Software that is described herein is for illustrative purposes only
     12           * which provides customers with programming information regarding the
     13           * products. This software is supplied "AS IS" without any warranties.
     14           * NXP Semiconductors assumes no responsibility or liability for the
     15           * use of the software, conveys no license or title under any patent,
     16           * copyright, or mask work right to the product. NXP Semiconductors
     17           * reserves the right to make changes in the software without
     18           * notification. NXP Semiconductors also make no representation or
     19           * warranty that such application will be suitable for the specified
     20           * use without further testing or modification.
     21          ****************************************************************************/
     22          #include "ringbuffer.h"
     23          #include "BT816.h"
     24          #include "Event.h"
     25          #include "Esc_p.h"
     26          #include "Type.h"
     27          #include "uart.h"
     28          #include "stm32f10x_systick.h"
     29          #include "stm32f10x_lib.h"
     30          #define		CHANNEL_TIMEOUT_TH		200		//当某一个串口通道在100ms内没有接收到数据时，认为此通道打印任务结束，此数据待调试	
     31          
     32          #ifdef DEBUG_VER
     33          extern unsigned short debug_buffer[];
     34          extern unsigned int debug_cnt;
     35          #endif
     36          /******************************************************************************
     37          **Function name:  Getchar
     38          **
     39          **Description:  Get a char from the uart 0 port
     40          **
     41          **parameters: none
     42          **Returned value:
     43          **
     44          ******************************************************************************/
     45          extern uint8_t Getchar(void)        //接收数据
     46          {
     47          	uint8_t c;
     48          	unsigned int	i,delay;
     49          	static unsigned int timeout;
     50          	while(1)
     51          	{
     52          		event_proc();
     53          
     54          		if (current_channel == -1)
     55          		{
     56          			//还未进入打印通道的打印会话过程
     57          			for (i = 0; i < MAX_PT_CHANNEL;i++)
     58          			{
     59          				if (ringbuffer_getchar(&spp_ringbuf[i],&c))
     60          				{
     61          					current_channel = i;
     62          //#ifdef DEBUG_VER
     63          //					debug_buffer[0] = c;
     64          //					debug_cnt = 1;
     65          //#endif
     66          					return c;
     67          				}
     68          			}
     69          		}
     70          		else
     71          		{
     72          			//已经进入某一个打印通道的打印会话过程
     73          			if (ringbuffer_getchar(&spp_ringbuf[current_channel],&c))
     74          			{
     75          				timeout = 0;
     76          				if (ringbuffer_data_len(&spp_ringbuf[current_channel]) < RING_BUFF_EMPTY_TH)
     77          				{
     78          					set_BT_FREE(current_channel);
     79          				}
     80          //#ifdef DEBUG_VER
     81          //				debug_buffer[debug_cnt] = c;
     82          //				debug_cnt++;
     83          //#endif
     84          				return c;
     85          			}
     86          			else
     87          			{
     88          				delay = SysTick_GetCounter();
     89          				if (timeout == 0)
     90          				{
     91          					timeout = delay;
     92          				}
     93          				else
     94          				{
     95          					if (delay > timeout)
     96          					{
     97          						delay = delay-timeout;
     98          					}
     99          					else
    100          					{
    101          						delay += 0xffffffff-timeout;
    102          					}
    103          
    104          					if (delay > (CHANNEL_TIMEOUT_TH/10))	//systick是10ms计数的
    105          					{
    106          						PrintBufToZero();
    107          						current_channel = -1;
    108          						//debug_cnt = 0;
    109          					}
    110          				}
    111          			}
    112          		}
    113          		
    114          	}
    115          
    116          }
    117          
    118           extern uint8_t PrintBufGetchar(uint8_t *ch)
    119           {
    120          	return ringbuffer_getchar(&spp_ringbuf[current_channel],ch);
    121           }
    122          
    123           extern void PrintBufPushBytes(uint8_t c)
    124           {
    125                ringbuffer_putchar(&spp_ringbuf[current_channel],c);
    126           }
    127          
    128          //======================================================================================================
    129          extern void PrintBufPushLine( uint8_t *p, uint32_t len)
    130          {
    131          	ringbuffer_put(&spp_ringbuf[current_channel],p,len);
    132          }
    133          extern void PrintBufToZero(void)
    134          {
    135               ringbuffer_reset(&spp_ringbuf[current_channel]);
    136          	 set_BT_FREE(current_channel);
    137          }
    138          /******************************************************************************
    139          **                            End Of File
    140          ******************************************************************************/

   Maximum stack usage in bytes:

     Function            .cstack
     --------            -------
     Getchar                 16
     PrintBufGetchar          8
     PrintBufPushBytes        8
     PrintBufPushLine         8
     PrintBufToZero           8
     ringbuffer_data_len      8
     ringbuffer_status        0


   Section sizes:

     Function/Label      Bytes
     --------------      -----
     ringbuffer_status     40
     ringbuffer_data_len   68
     Getchar              260
     timeout                4
     PrintBufGetchar       24
     PrintBufPushBytes     24
     PrintBufPushLine      24
     PrintBufToZero        98
     ??DataTable22          4
     ??DataTable23          4
     ??DataTable24          4
     ??DataTable26          4
     ??DataTable27          4
     ??DataTable28          4
     ??DataTable29          4

 
   4 bytes in section .bss
 566 bytes in section .text
 
 566 bytes of CODE memory
   4 bytes of DATA memory

Errors: none
Warnings: none
