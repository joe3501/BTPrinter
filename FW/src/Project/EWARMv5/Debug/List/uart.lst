###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V5.30.0.51174/W32 for ARM     26/Nov/2015  15:26:56 #
# Copyright 1999-2009 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  E:\BT Printer\FW\src\App\uart.c                          #
#    Command line =  "E:\BT Printer\FW\src\App\uart.c" -D DEBUG_VER -lcN      #
#                    "E:\BT Printer\FW\src\Project\EWARMv5\Debug\List\" -o    #
#                    "E:\BT Printer\FW\src\Project\EWARMv5\Debug\Obj\"        #
#                    --no_cse --no_unroll --no_inline --no_code_motion        #
#                    --no_tbaa --no_clustering --no_scheduling --debug        #
#                    --endian=little --cpu=Cortex-M3 -e --fpu=None            #
#                    --dlib_config "C:\Program Files\IAR Systems\Embedded     #
#                    Workbench 5.4\arm\INC\DLib_Config_Full.h" -I "E:\BT      #
#                    Printer\FW\src\Project\EWARMv5\..\" -I "E:\BT            #
#                    Printer\FW\src\Project\EWARMv5\..\..\App\" -I "E:\BT     #
#                    Printer\FW\src\Project\EWARMv5\..\..\Drivers\" -I        #
#                    "E:\BT Printer\FW\src\Project\EWARMv5\..\..\FatFs\" -I   #
#                    "E:\BT Printer\FW\src\Project\EWARMv5\..\..\Lib\inc\"    #
#                    -I "E:\BT Printer\FW\src\Project\EWARMv5\..\..\uCOS\uC-C #
#                    PU\" -I "E:\BT Printer\FW\src\Project\EWARMv5\..\..\uCOS #
#                    \uC-LIB\" -I "E:\BT Printer\FW\src\Project\EWARMv5\..\.. #
#                    \uCOS\uCOS-II\Ports\" -I "E:\BT                          #
#                    Printer\FW\src\Project\EWARMv5\..\..\uCOS\uCOS-II\Source #
#                    \" -I "E:\BT Printer\FW\src\Project\EWARMv5\..\..\uCOS\u #
#                    C-Probe\" -I "E:\BT Printer\FW\src\Project\EWARMv5\..\.. #
#                    \usb_lib\" -I "C:\Program Files\IAR Systems\Embedded     #
#                    Workbench 5.4\arm\INC\" -Ol                              #
#    List file    =  E:\BT Printer\FW\src\Project\EWARMv5\Debug\List\uart.lst #
#    Object file  =  E:\BT Printer\FW\src\Project\EWARMv5\Debug\Obj\uart.o    #
#                                                                             #
#                                                                             #
###############################################################################

E:\BT Printer\FW\src\App\uart.c
      1          /****************************************************************************
      2           *   $Id:: uart.c 3648 2010-06-02 21:41:06Z usb00423                        $
      3           *   Project: NXP LPC11xx UART example
      4           *
      5           *   Description:
      6           *     This file contains UART code example which include UART
      7           *     initialization, UART interrupt handler, and related APIs for
      8           *     UART access.
      9           *
     10           ****************************************************************************
     11           * Software that is described herein is for illustrative purposes only
     12           * which provides customers with programming information regarding the
     13           * products. This software is supplied "AS IS" without any warranties.
     14           * NXP Semiconductors assumes no responsibility or liability for the
     15           * use of the software, conveys no license or title under any patent,
     16           * copyright, or mask work right to the product. NXP Semiconductors
     17           * reserves the right to make changes in the software without
     18           * notification. NXP Semiconductors also make no representation or
     19           * warranty that such application will be suitable for the specified
     20           * use without further testing or modification.
     21          ****************************************************************************/
     22          #include "ringbuffer.h"
     23          #include "BT816.h"
     24          #include "Event.h"
     25          #include "Esc_p.h"
     26          
     27          #define		CHANNEL_TIMEOUT_TH		100		//当某一个串口通道在100ms内没有接收到数据时，认为此通道打印任务结束，此数据待调试	
     28          
     29          /******************************************************************************
     30          **Function name:  Getchar
     31          **
     32          **Description:  Get a char from the uart 0 port
     33          **
     34          **parameters: none
     35          **Returned value:
     36          **
     37          ******************************************************************************/
     38          extern uint8_t Getchar(void)        //接收数据
     39          {
     40          	uint8_t c;
     41          	unsigned int	i,delay;
     42          	static unsigned int timeout;
     43          	while(1)
     44          	{
     45          		event_proc();
     46          
     47          		if (current_channel == -1)
     48          		{
     49          			//还未进入打印通道的打印会话过程
     50          			for (i = 0; i < MAX_PT_CHANNEL;i++)
     51          			{
     52          				if (ringbuffer_getchar(&spp_ringbuf[i],&c))
     53          				{
     54          					current_channel = i;
     55          					return c;
     56          				}
     57          			}
     58          		}
     59          		else
     60          		{
     61          			//已经进入某一个打印通道的打印会话过程
     62          			if (ringbuffer_getchar(&spp_ringbuf[current_channel],&c))
     63          			{
     64          				timeout = 0;
     65          				return c;
     66          			}
     67          			else
     68          			{
     69          				delay = SysTick_GetCounter();
     70          				if (timeout == 0)
     71          				{
     72          					timeout = delay;
     73          				}
     74          				else
     75          				{
     76          					if (delay > timeout)
     77          					{
     78          						delay = delay-timeout;
     79          					}
     80          					else
     81          					{
     82          						delay += 0xffffffff-timeout;
     83          					}
     84          
     85          					if (delay > (CHANNEL_TIMEOUT_TH/10))	//systick是10ms计数的
     86          					{
     87          						current_channel = -1;
     88          					}
     89          				}
     90          			}
     91          		}
     92          		
     93          	}
     94          
     95          }
     96          
     97           extern uint8_t PrintBufGetchar(uint8_t *ch)
     98           {
     99          	return ringbuffer_getchar(&spp_ringbuf[current_channel],ch);
    100           }
    101          
    102           extern void PrintBufPushBytes(uint8_t c)
    103           {
    104                ringbuffer_putchar(&spp_ringbuf[current_channel],c);
    105           }
    106          
    107          //======================================================================================================
    108          extern void PrintBufPushLine( uint8_t *p, uint32_t len)
    109          {
    110          	ringbuffer_put(&spp_ringbuf[current_channel],p,len);
    111          }
    112          extern void PrintBufToZero(void)
    113          {
    114               ringbuffer_reset(&spp_ringbuf[current_channel]);
    115          }
    116          /******************************************************************************
    117          **                            End Of File
    118          ******************************************************************************/

   Maximum stack usage in bytes:

     Function          .cstack
     --------          -------
     Getchar               16
     PrintBufGetchar        8
     PrintBufPushBytes      8
     PrintBufPushLine       8
     PrintBufToZero         8


   Section sizes:

     Function/Label    Bytes
     --------------    -----
     Getchar            156
     timeout              4
     PrintBufGetchar     24
     PrintBufPushBytes   24
     PrintBufPushLine    24
     PrintBufToZero      20
     ??DataTable12        4
     ??DataTable13        4

 
   4 bytes in section .bss
 256 bytes in section .text
 
 256 bytes of CODE memory
   4 bytes of DATA memory

Errors: none
Warnings: 1
