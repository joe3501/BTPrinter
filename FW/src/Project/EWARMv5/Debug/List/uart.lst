###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V5.30.0.51174/W32 for ARM     28/Nov/2015  15:18:09 #
# Copyright 1999-2009 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  E:\BT Printer\FW\src\App\uart.c                          #
#    Command line =  "E:\BT Printer\FW\src\App\uart.c" -D DEBUG_VER -lcN      #
#                    "E:\BT Printer\FW\src\Project\EWARMv5\Debug\List\" -o    #
#                    "E:\BT Printer\FW\src\Project\EWARMv5\Debug\Obj\"        #
#                    --no_cse --no_unroll --no_inline --no_code_motion        #
#                    --no_tbaa --no_clustering --no_scheduling --debug        #
#                    --endian=little --cpu=Cortex-M3 -e --fpu=None            #
#                    --dlib_config "C:\Program Files\IAR Systems\Embedded     #
#                    Workbench 5.4\arm\INC\DLib_Config_Full.h" -I "E:\BT      #
#                    Printer\FW\src\Project\EWARMv5\..\" -I "E:\BT            #
#                    Printer\FW\src\Project\EWARMv5\..\..\App\" -I "E:\BT     #
#                    Printer\FW\src\Project\EWARMv5\..\..\Drivers\" -I        #
#                    "E:\BT Printer\FW\src\Project\EWARMv5\..\..\FatFs\" -I   #
#                    "E:\BT Printer\FW\src\Project\EWARMv5\..\..\Lib\inc\"    #
#                    -I "E:\BT Printer\FW\src\Project\EWARMv5\..\..\uCOS\uC-C #
#                    PU\" -I "E:\BT Printer\FW\src\Project\EWARMv5\..\..\uCOS #
#                    \uC-LIB\" -I "E:\BT Printer\FW\src\Project\EWARMv5\..\.. #
#                    \uCOS\uCOS-II\Ports\" -I "E:\BT                          #
#                    Printer\FW\src\Project\EWARMv5\..\..\uCOS\uCOS-II\Source #
#                    \" -I "E:\BT Printer\FW\src\Project\EWARMv5\..\..\uCOS\u #
#                    C-Probe\" -I "E:\BT Printer\FW\src\Project\EWARMv5\..\.. #
#                    \usb_lib\" -I "C:\Program Files\IAR Systems\Embedded     #
#                    Workbench 5.4\arm\INC\" -Ol                              #
#    List file    =  E:\BT Printer\FW\src\Project\EWARMv5\Debug\List\uart.lst #
#    Object file  =  E:\BT Printer\FW\src\Project\EWARMv5\Debug\Obj\uart.o    #
#                                                                             #
#                                                                             #
###############################################################################

E:\BT Printer\FW\src\App\uart.c
      1          /****************************************************************************
      2           *   $Id:: uart.c 3648 2010-06-02 21:41:06Z usb00423                        $
      3           *   Project: NXP LPC11xx UART example
      4           *
      5           *   Description:
      6           *     This file contains UART code example which include UART
      7           *     initialization, UART interrupt handler, and related APIs for
      8           *     UART access.
      9           *
     10           ****************************************************************************
     11           * Software that is described herein is for illustrative purposes only
     12           * which provides customers with programming information regarding the
     13           * products. This software is supplied "AS IS" without any warranties.
     14           * NXP Semiconductors assumes no responsibility or liability for the
     15           * use of the software, conveys no license or title under any patent,
     16           * copyright, or mask work right to the product. NXP Semiconductors
     17           * reserves the right to make changes in the software without
     18           * notification. NXP Semiconductors also make no representation or
     19           * warranty that such application will be suitable for the specified
     20           * use without further testing or modification.
     21          ****************************************************************************/
     22          #include "ringbuffer.h"
     23          #include "BT816.h"
     24          #include "Event.h"
     25          #include "Esc_p.h"
     26          #include "Type.h"
     27          #include "uart.h"
     28          #include "stm32f10x_systick.h"
     29          #include "stm32f10x_lib.h"
     30          #define		CHANNEL_TIMEOUT_TH		100		//当某一个串口通道在100ms内没有接收到数据时，认为此通道打印任务结束，此数据待调试	
     31          
     32          /******************************************************************************
     33          **Function name:  Getchar
     34          **
     35          **Description:  Get a char from the uart 0 port
     36          **
     37          **parameters: none
     38          **Returned value:
     39          **
     40          ******************************************************************************/
     41          extern uint8_t Getchar(void)        //接收数据
     42          {
     43          	uint8_t c;
     44          	unsigned int	i,delay;
     45          	static unsigned int timeout;
     46          	while(1)
     47          	{
     48          		event_proc();
     49          
     50          		if (current_channel == -1)
     51          		{
     52          			//还未进入打印通道的打印会话过程
     53          			for (i = 0; i < MAX_PT_CHANNEL;i++)
     54          			{
     55          				if (ringbuffer_getchar(&spp_ringbuf[i],&c))
     56          				{
     57          					current_channel = i;
     58          					return c;
     59          				}
     60          			}
     61          		}
     62          		else
     63          		{
     64          			//已经进入某一个打印通道的打印会话过程
     65          			if (ringbuffer_getchar(&spp_ringbuf[current_channel],&c))
     66          			{
     67          				timeout = 0;
     68          				if (ringbuffer_data_len(&spp_ringbuf[current_channel]) < RING_BUFF_EMPTY_TH)
     69          				{
     70          					set_BT_FREE(current_channel);
     71          				}
     72          				return c;
     73          			}
     74          			else
     75          			{
     76          				delay = SysTick_GetCounter();
     77          				if (timeout == 0)
     78          				{
     79          					timeout = delay;
     80          				}
     81          				else
     82          				{
     83          					if (delay > timeout)
     84          					{
     85          						delay = delay-timeout;
     86          					}
     87          					else
     88          					{
     89          						delay += 0xffffffff-timeout;
     90          					}
     91          
     92          					if (delay > (CHANNEL_TIMEOUT_TH/10))	//systick是10ms计数的
     93          					{
     94          						PrintBufToZero();
     95          						current_channel = -1;
     96          					}
     97          				}
     98          			}
     99          		}
    100          		
    101          	}
    102          
    103          }
    104          
    105           extern uint8_t PrintBufGetchar(uint8_t *ch)
    106           {
    107          	return ringbuffer_getchar(&spp_ringbuf[current_channel],ch);
    108           }
    109          
    110           extern void PrintBufPushBytes(uint8_t c)
    111           {
    112                ringbuffer_putchar(&spp_ringbuf[current_channel],c);
    113           }
    114          
    115          //======================================================================================================
    116          extern void PrintBufPushLine( uint8_t *p, uint32_t len)
    117          {
    118          	ringbuffer_put(&spp_ringbuf[current_channel],p,len);
    119          }
    120          extern void PrintBufToZero(void)
    121          {
    122               ringbuffer_reset(&spp_ringbuf[current_channel]);
    123          }
    124          /******************************************************************************
    125          **                            End Of File
    126          ******************************************************************************/

   Maximum stack usage in bytes:

     Function            .cstack
     --------            -------
     Getchar                 16
     PrintBufGetchar          8
     PrintBufPushBytes        8
     PrintBufPushLine         8
     PrintBufToZero           8
     ringbuffer_data_len      8
     ringbuffer_status        0


   Section sizes:

     Function/Label      Bytes
     --------------      -----
     ringbuffer_status     40
     ringbuffer_data_len   68
     Getchar              264
     timeout                4
     PrintBufGetchar       24
     PrintBufPushBytes     24
     PrintBufPushLine      24
     PrintBufToZero        20
     ??DataTable15          4
     ??DataTable16          4

 
   4 bytes in section .bss
 472 bytes in section .text
 
 472 bytes of CODE memory
   4 bytes of DATA memory

Errors: none
Warnings: none
