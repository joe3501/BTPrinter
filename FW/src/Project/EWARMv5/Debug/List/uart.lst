###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V5.30.0.51174/W32 for ARM     12/Dec/2015  15:19:57 #
# Copyright 1999-2009 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  E:\BT Printer\FW\src\App\uart.c                          #
#    Command line =  "E:\BT Printer\FW\src\App\uart.c" -D DEBUG_VER -lcN      #
#                    "E:\BT Printer\FW\src\Project\EWARMv5\Debug\List\" -o    #
#                    "E:\BT Printer\FW\src\Project\EWARMv5\Debug\Obj\"        #
#                    --no_cse --no_unroll --no_inline --no_code_motion        #
#                    --no_tbaa --no_clustering --no_scheduling --debug        #
#                    --endian=little --cpu=Cortex-M3 -e --fpu=None            #
#                    --dlib_config "C:\Program Files\IAR Systems\Embedded     #
#                    Workbench 5.4\arm\INC\DLib_Config_Normal.h" -I "E:\BT    #
#                    Printer\FW\src\Project\EWARMv5\..\" -I "E:\BT            #
#                    Printer\FW\src\Project\EWARMv5\..\..\App\" -I "E:\BT     #
#                    Printer\FW\src\Project\EWARMv5\..\..\Drivers\" -I        #
#                    "E:\BT Printer\FW\src\Project\EWARMv5\..\..\FatFs\" -I   #
#                    "E:\BT Printer\FW\src\Project\EWARMv5\..\..\Lib\inc\"    #
#                    -I "E:\BT Printer\FW\src\Project\EWARMv5\..\..\uCOS\uC-C #
#                    PU\" -I "E:\BT Printer\FW\src\Project\EWARMv5\..\..\uCOS #
#                    \uC-LIB\" -I "E:\BT Printer\FW\src\Project\EWARMv5\..\.. #
#                    \uCOS\uCOS-II\Ports\" -I "E:\BT                          #
#                    Printer\FW\src\Project\EWARMv5\..\..\uCOS\uCOS-II\Source #
#                    \" -I "E:\BT Printer\FW\src\Project\EWARMv5\..\..\uCOS\u #
#                    C-Probe\" -I "E:\BT Printer\FW\src\Project\EWARMv5\..\.. #
#                    \usb_lib\" -I "C:\Program Files\IAR Systems\Embedded     #
#                    Workbench 5.4\arm\INC\" -Ol                              #
#    List file    =  E:\BT Printer\FW\src\Project\EWARMv5\Debug\List\uart.lst #
#    Object file  =  E:\BT Printer\FW\src\Project\EWARMv5\Debug\Obj\uart.o    #
#                                                                             #
#                                                                             #
###############################################################################

E:\BT Printer\FW\src\App\uart.c
      1          /****************************************************************************
      2           *   $Id:: uart.c 3648 2010-06-02 21:41:06Z usb00423                        $
      3           *   Project: NXP LPC11xx UART example
      4           *
      5           *   Description:
      6           *     This file contains UART code example which include UART
      7           *     initialization, UART interrupt handler, and related APIs for
      8           *     UART access.
      9           *
     10           ****************************************************************************
     11           * Software that is described herein is for illustrative purposes only
     12           * which provides customers with programming information regarding the
     13           * products. This software is supplied "AS IS" without any warranties.
     14           * NXP Semiconductors assumes no responsibility or liability for the
     15           * use of the software, conveys no license or title under any patent,
     16           * copyright, or mask work right to the product. NXP Semiconductors
     17           * reserves the right to make changes in the software without
     18           * notification. NXP Semiconductors also make no representation or
     19           * warranty that such application will be suitable for the specified
     20           * use without further testing or modification.
     21          ****************************************************************************/
     22          #include "ringbuffer.h"
     23          #include "BT816.h"
     24          #include "Event.h"
     25          #include "Esc_p.h"
     26          #include "Type.h"
     27          #include "uart.h"
     28          #include "stm32f10x_systick.h"
     29          #include "stm32f10x_lib.h"
     30          #include "usb_regs.h"
     31          #define		CHANNEL_TIMEOUT_TH		200		//当某一个串口通道在200ms内没有接收到数据时，认为此通道打印任务结束，此数据待调试	
     32          
     33          #ifdef DEBUG_VER
     34          extern unsigned char debug_buffer[];
     35          extern unsigned int debug_cnt;
     36          #endif
     37          
     38          //unsigned char		spp_rec_buffer[MAX_PRINT_CHANNEL][SPP_BUFFER_LEN];
     39          unsigned char		spp_rec_buffer[MAX_BT_CHANNEL][SPP_BUFFER_LEN];			//蓝牙通道的环形缓冲区size为2048
     40          unsigned char		usb_rec_buffer[USB_BUFFER_LEN];								//USB通道的环形缓冲区size为1024足够
     41          struct ringbuffer	spp_ringbuf[MAX_PRINT_CHANNEL];
     42          
     43          extern uint32_t systick_cnt;
     44          
     45          /******************************************************************************
     46          **Function name:  Getchar
     47          **
     48          **Description:  Get a char from the uart 0 port
     49          **
     50          **parameters: none
     51          **Returned value:
     52          **
     53          ******************************************************************************/
     54          extern uint8_t Getchar(void)        //接收数据
     55          {
     56          	uint8_t c;
     57          	unsigned int	i,delay;
     58          	static unsigned int timeout;
     59          	while(1)
     60          	{
     61          		event_proc();
     62          
     63          		if (current_channel == -1)
     64          		{
     65          			//还未进入打印通道的打印会话过程
     66          			for (i = 0; i < MAX_PRINT_CHANNEL;i++)
     67          			{
     68          				if (ringbuffer_getchar(&spp_ringbuf[i],&c))
     69          				{
     70          					timeout = 0;
     71          					//debug_cnt = 0;
     72          					current_channel = i;
     73          #ifdef DEBUG_VER
     74          					//debug_buffer[0] = c;
     75          					//debug_cnt = 1;
     76          #endif
     77          					//trip1();
     78          					return c;
     79          				}
     80          			}
     81          		}
     82          		else
     83          		{
     84          			//已经进入某一个打印通道的打印会话过程
     85          			if (ringbuffer_getchar(&spp_ringbuf[current_channel],&c))
     86          			{
     87          				timeout = 0;
     88          				//debug_cnt = 0;
     89          				if (ringbuffer_data_len(&spp_ringbuf[current_channel]) < RING_BUFF_EMPTY_TH)
     90          				{
     91          					if (current_channel != USB_PRINT_CHANNEL_OFFSET)
     92          					{
     93          						set_BT_free(current_channel);
     94          					}
     95          					else
     96          					{
     97          						SetEPRxStatus(EP2_OUT, EP_RX_VALID);
     98          					}
     99          				}
    100          #ifdef DEBUG_VER
    101          				//debug_buffer[debug_cnt] = c;
    102          				//debug_cnt++;
    103          #endif
    104          				//trip1();
    105          				return c;
    106          			}
    107          			else
    108          			{
    109          				delay = systick_cnt;		//systick中断中维持的递增计数器
    110          				if (timeout == 0)
    111          				{
    112          					timeout = (delay!=0)?delay:1;
    113          				}
    114          				else
    115          				{
    116          					if (delay != timeout)
    117          					{
    118          						if (delay > timeout)
    119          						{
    120          							delay = delay - timeout;
    121          						}
    122          						else
    123          						{
    124          							delay += 0xffffffff-timeout;
    125          						}
    126          
    127          						if (delay > (CHANNEL_TIMEOUT_TH/10))	//systick是10ms计数的
    128          						{
    129          							//trip3();
    130          							PrintBufToZero();
    131          							current_channel = -1;
    132          							//debug_cnt = 0;
    133          						}
    134          					}
    135          				}
    136          			}
    137          		}
    138          		
    139          	}
    140          
    141          }
    142          
    143           extern uint8_t PrintBufGetchar(uint8_t *ch)
    144           {
    145          	return ringbuffer_getchar(&spp_ringbuf[current_channel],ch);
    146           }
    147          
    148           extern void PrintBufPushBytes(uint8_t c)
    149           {
    150                ringbuffer_putchar(&spp_ringbuf[current_channel],c);
    151           }
    152          
    153          //======================================================================================================
    154          extern void PrintBufPushLine( uint8_t *p, uint32_t len)
    155          {
    156          	ringbuffer_put(&spp_ringbuf[current_channel],p,len);
    157          }
    158          extern void PrintBufToZero(void)
    159          {
    160               ringbuffer_reset(&spp_ringbuf[current_channel]);
    161          	 set_BT_free(current_channel);
    162          }
    163          /******************************************************************************
    164          **                            End Of File
    165          ******************************************************************************/

   Maximum stack usage in bytes:

     Function            .cstack
     --------            -------
     Getchar                 16
     PrintBufGetchar          8
     PrintBufPushBytes        8
     PrintBufPushLine         8
     PrintBufToZero           8
     ringbuffer_data_len      8
     ringbuffer_status        0


   Section sizes:

     Function/Label      Bytes
     --------------      -----
     ringbuffer_status     40
     ringbuffer_data_len   68
     spp_rec_buffer      4096
     usb_rec_buffer      1024
     spp_ringbuf           48
     Getchar              244
     timeout                4
     PrintBufGetchar       24
     PrintBufPushBytes     24
     PrintBufPushLine      24
     PrintBufToZero        30
     ??DataTable17          4
     ??DataTable18          4

 
 5 172 bytes in section .bss
   462 bytes in section .text
 
   462 bytes of CODE memory
 5 172 bytes of DATA memory

Errors: none
Warnings: 1
